// ‚úÖ scan.js | Logic ‡πÄ‡∏î‡∏¥‡∏° 100% ‡∏à‡∏≤‡∏Å scan.html

let token = "";

function onScanSuccess(qrMessage) {
  if (!qrMessage) {
    Swal.fire({ 
      icon: 'error', 
      title: '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô QR Code', 
      html: `<div style="margin-top: 10px;">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ Scan QR Code (New)</div>`,
      confirmButtonText: 'üîÑ Scan QR Code (New)',
      width: 'clamp(300px,90%,420px)', 
      customClass: { title: 'swal2-title-custom', popup: 'swal2-border' }
    }).then(() => resetScanner());
    return;
  }

  html5QrcodeScanner.clear();
  document.getElementById('reader').style.display = 'none';

  token = extractToken(qrMessage);

  if (!token) {
    Swal.fire({
      icon: 'error',
      title: '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Token',
      html: `<div style="margin-top: 10px;">QR Code ‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</div>`,
      confirmButtonText: 'üîÑ Scan QR Code (New)',
      width: 'clamp(300px,90%,420px)',
      customClass: { title: 'swal2-title-custom', popup: 'swal2-border' }
    }).then(() => resetScanner());
    return;
  }

  Swal.fire({
    title: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...',
    allowOutsideClick: false,
    didOpen: () => Swal.showLoading(),
    customClass: { popup: 'swal2-border', title: 'swal2-title-custom' }
  });

  google.script.run
    .withSuccessHandler(function(data) {
      Swal.close();
      if (!data || !data.found) {
        Swal.fire({ 
          icon: 'error', 
          title: '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', 
          text: 'Token ‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö', 
          confirmButtonText: 'üîÑ Scan QR Code (New)',
          width: 'clamp(300px,90%,420px)', 
          customClass: { title: 'swal2-title-custom', popup: 'swal2-border' }
        }).then(() => resetScanner());
        return;
      }

      showScanInfo(data);
    })
    .withFailureHandler(function(err) {
      Swal.fire({ 
        icon: 'error', 
        title: '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î', 
        text: err.message || String(err), 
        width: 'clamp(300px,90%,420px)', 
        confirmButtonColor: '#2563eb', 
        customClass: { title: 'swal2-title-custom', popup: 'swal2-border' }
      });
    })
    .getScanInfoByToken(token);
}

function extractToken(raw) {
  try {
    if (raw.includes("?token=")) {
      const urlObj = new URL(raw);
      return urlObj.searchParams.get("token") || "";
    } else {
      return raw.trim();
    }
  } catch {
    return raw.trim();
  }
}

function showScanInfo(data) {
  const infoDiv = document.getElementById('info');
  const buttonsDiv = document.getElementById('buttons');
  const checkinBtn = document.getElementById('checkin');
  const checkoutBtn = document.getElementById('checkout');

  infoDiv.style.display = 'block';
  infoDiv.innerHTML = `
    <div class="info-row"><span class="info-label">üìÑ ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏≥‡∏Ç‡∏≠ : </span><div class="info-value">${data.noSVR || '-'}</div></div>
    <div class="info-row"><span class="info-label">üë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡πâ‡∏≠‡∏á‡∏Ç‡∏≠ : </span><div class="info-value">${data.requester || data.name || '-'}</div></div>
    <div class="info-row"><span class="info-label">üÜî ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô : </span><div class="info-value">${data.idCard || '-'}</div></div>
    <div class="info-row"><span class="info-label">üè¢ ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó : </span><div class="info-value">${data.company || '-'}</div></div>
    <div class="info-row"><span class="info-label">üìû ‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå : </span><div class="info-value">${data.phone || '-'}</div></div>
    <div class="info-row"><span class="info-label">üìß Email : </span><div class="info-value">${data.email || '-'}</div></div>
    <div class="info-row"><span class="info-label">üèóÔ∏è ‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ : </span><div class="info-value">${data.project || '-'}</div></div>
    <div class="info-row"><span class="info-label">üéØ ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå : </span><div class="info-value">${data.purpose || '-'}</div></div>
    <div class="info-row"><span class="info-label">üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô : </span><div class="info-value">${data.dateStart || '-'}</div></div>
    <div class="info-row"><span class="info-label">üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î : </span><div class="info-value">${data.dateEnd || '-'}</div></div>
    <div class="info-row"><span class="info-label">‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô : </span><div class="info-value">${data.timeIn || '-'}</div></div>
    <div class="info-row"><span class="info-label">‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î : </span><div class="info-value">${data.timeOut || '-'}</div></div>
    <div class="info-row"><span class="info-label">‚úÖ Check-In : </span><div class="info-value">${data.checkin || '-'}</div></div>
    <div class="info-row"><span class="info-label">‚úÖ Check-Out : </span><div class="info-value">${data.checkout || '-'}</div></div>
    <div class="info-row"><span class="info-label">üìå ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ : </span><div class="info-value">${data.status || '-'}</div></div>
    ${data.status === "‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥" ? `<div class="info-row"><span class="info-label">‚ùå ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ : </span><div class="info-value" style="color:#dc2626;">${data.reason || '-'}</div></div>` : ""}
  `;

  if (data.checkin && data.checkout) {
    buttonsDiv.style.display = 'none';
    infoDiv.innerHTML += `
      <div class="locked-wrapper">
        <p class="locked">‚úÖ ‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ Check-In ‡πÅ‡∏•‡∏∞ Check-Out ‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß</p>
        <button onclick="resetScanner()" class="scan-again-btn">üîÑ Scan QR Code (New)</button>
      </div>
    `;
  } else {
    checkinBtn.style.display = (!data.checkin) ? 'block' : 'none';
    checkoutBtn.style.display = (data.checkin && !data.checkout) ? 'block' : 'none';
    buttonsDiv.style.display = 'flex';

    if (!document.querySelector('#buttons .scan-again-btn')) {
      const scanBtn = document.createElement('button');
      scanBtn.textContent = 'üîÑ ‡∏™‡πÅ‡∏Å‡∏ô QR Code ‡πÉ‡∏´‡∏°‡πà';
      scanBtn.className = 'scan-again-btn';
      scanBtn.style.marginTop = '10px';
      scanBtn.onclick = resetScanner;
      buttonsDiv.appendChild(scanBtn);
    }
  }
}

function submitScanAction(type) {
  Swal.fire({
    title: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...',
    allowOutsideClick: false,
    didOpen: () => Swal.showLoading(),
    width: 'clamp(300px,90%,420px)',
    customClass: { popup: 'swal2-border', title: 'swal2-title-custom' }
  });

  google.script.run
    .withSuccessHandler(function(res) {
      Swal.close();
      if (res.success) {
        Swal.fire({
          icon: 'success',
          title: '‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
          html: `
            <div style="font-size: 1.05rem; color: #333;">
              <p>üìÖ <b>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:</b> ${res.time.split(' ')[0]}</p>
              <p>üïí <b>‡πÄ‡∏ß‡∏•‡∏≤:</b> ${res.time.split(' ')[1]}</p>
              <p>‚úÖ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏ó‡∏≥ <b>${type === 'in' ? 'Check-In' : 'Check-Out'}</b> ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß</p>
            </div>
          `,
          confirmButtonColor: '#2563eb',
          customClass: { title: 'swal2-title-custom', popup: 'swal2-border' }
        }).then(() => {
          Swal.fire({
            title: 'üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...',
            allowOutsideClick: false,
            didOpen: () => Swal.showLoading(),
            customClass: { popup: 'swal2-border', title: 'swal2-title-custom' }
          });

          google.script.run
            .withSuccessHandler(function(data) {
              Swal.close();
              if (data && data.found) showScanInfo(data);
            })
            .withFailureHandler(function(err) {
              Swal.fire({
                icon: 'error',
                title: '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
                text: err.message || String(err),
                confirmButtonColor: '#2563eb',
                customClass: { title: 'swal2-title-custom', popup: 'swal2-border' }
              });
            })
            .getScanInfoByToken(token);
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: '‚ùå ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß',
          text: res.message || '',
          width: 'clamp(300px,90%,420px)',
          confirmButtonColor: '#2563eb',
          customClass: { title: 'swal2-title-custom', popup: 'swal2-border' }
        });
      }
    })
    .withFailureHandler(function(err) {
      Swal.close();
      Swal.fire({
        icon: 'error',
        title: '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
        text: err.message || String(err),
        width: 'clamp(300px,90%,420px)',
        confirmButtonColor: '#2563eb',
        customClass: { title: 'swal2-title-custom', popup: 'swal2-border' }
      });
    })
    .submitScan(token, type);
}

function resetScanner() {
  document.getElementById('info').style.display = 'none';
  document.getElementById('buttons').style.display = 'none';
  document.getElementById('reader').style.display = 'block';
  document.getElementById('info').innerHTML = '';
  html5QrcodeScanner.clear().then(() => {
    html5QrcodeScanner.render(onScanSuccess);
  }).catch(err => {
    console.error("‚ùå ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err);
  });
}

const html5QrcodeScanner = new Html5QrcodeScanner("reader", { fps: 10, qrbox: 250 });
html5QrcodeScanner.render(onScanSuccess);
